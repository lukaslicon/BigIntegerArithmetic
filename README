Lukas Licon, llicon 
Winter 2023 PA#6
CSE 101
03/3/2023
README.md

In this assignment I have created a BigInteger ADT in C++ that is capable of performing arithmetic operations on arbitrarily large signed integers.

Program USAGE
#USAGE: ./Arithmetic <input file><output file>

--Arithmetic.cpp--
this is the main program for this project
this program takes 2 arguments, input file for reading and output file for writing.
this file implements all functions written out for use in BigInteger.cpp.
Arithmetic.cpp performs arithmetic operations on arbitrarily large signed integers.

--BigInteger.cpp--
Implementation of functions used in Arithmetic.cpp for performing operations.
this file contains all the implementation of the function delcarations defined in BigInteger.h

--BigInteger.h--
this is a header file that contains all the function declarations for BigInteger.cpp
the compiler uses the information in the header files to declare what functions and structures are available to the programmer and how to use them.

--BigIntegerTest.cpp--
this file is to be used as a test client. I created my own tests to test all BigInteger functions involved in BigInteger.h
this file outputs to terminal every other file that outputs, outputs to the output file.

--List.cpp--
implementation of LIST ADT functions that will be used in Shuffle.cpp for access, manipulation, construction, and destruction to perform shuffling operations.
this file contains all the implementation of the function delcarations defined in List.h
this file also contains the structures such as Node and List.

--List.h--
this is a header file that contains all the function declarations for List.cpp
the compiler uses the information in the header files to declare what functions and structures are available to the programmer and how to use them.

--ListTest.cpp--
this file is to be used as a test client. I created my own tests to test all LIST ADT operations involved in List.h and implemented in List.cpp
this file outputs to terminal every other file that outputs, outputs to a file.

--Makefile--
the Makefile contains a list of rules that tells the system what commands need/want to be executed.
the Makefile is created so that a program can compile due to the executables.

--README--
table of contents that explains what each file contains.

